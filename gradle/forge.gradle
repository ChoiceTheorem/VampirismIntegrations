repositories {
    maven { url = 'https://files.minecraftforge.net/maven' }

    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }

    maven { url 'https://modmaven.dev/' }

    repositories {
        maven {
            url "https://www.cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }

    maven {
        name = "Maxanier"
        url = "https://maxanier.de/maven2/"
    }

    maven {
        name = "Evilcraft JFrog"
        url = "https://oss.jfrog.org/artifactory/simple/libs-release/"
    }
    maven {
        name = "ChickenBones"
        url = "https://chickenbones.net/maven/"
    }

    maven {
        name 'LDTTeam - Modding - Minecolonies'
        url 'https://ldtteam.jfrog.io/ldtteam/modding/'
    }

//    maven {
//        name = "Minecolonies Maven"
//        url = "https://ldtteam.jfrog.io/ldtteam/mods-maven"
//    }

    mavenCentral()

    maven {
        //Local repo for custom forge builds.
        //Is not required to exist
        name = "LocalForge"
        url = "../../MinecraftForge/repo/"
    }
    maven {
        name = "Local2"
        url = "../../../.m2/repository"
    }


}

minecraft {
    mappings channel: "${project.mcp_channel}".toString(), version: "${project.mcp_mappings}".toString()
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            taskName 'runClient1'
            main 'net.minecraftforge.userdev.LaunchTesting'
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run/client1').canonicalPath
            jvmArg '-ea:de.teamlapen...'

            mods {
                vampirism_integrations {
                    source sourceSets.main

                }
            }
        }
        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            //property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run/server').canonicalPath
            jvmArg '-ea:de.teamlapen...'

            mods {
                vampirism_integrations {
                    source sourceSets.main
                }
            }
        }
    }

}


dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])

    implementation fg.deobf("de.teamlapen.vampirism:Vampirism:" + project.vampirism_mcversion + "-" + project.vampirism_version)

    //compileOnly fg.deobf('curse.maven:biomesoplenty-220318:' + project.bop_api_fileid)
    implementation fg.deobf('curse.maven:biomesoplenty-220318:' + project.bop_fileid) //We only want API but curse maven and forge gradle don't like me
    //Does not start in dev
    //runtimeOnly fg.deobf('com.github.glitchfiend.biomesoplenty:BiomesOPlenty:' + project.minecraft_version + '-' + project.bop_version + ':universal')
    compile fg.deobf("curse.maven:hwyla-253449:" + project.hywla_fileid)

    implementation fg.deobf("curse.maven:tan-246391:"+ project.tough_as_nails_fileid) //Only want API probably, but ...

    implementation fg.deobf("curse.maven:blood-magic-224791:" + project.bloodmagic_fileid) //We only want API but curse maven and forge gradle don't like me
    implementation fg.deobf("curse.maven:evilcraft-74610:" + project.evilcraft_fileid)
    runtimeOnly fg.deobf("curse.maven:cyclops-core-232758:" + project.cyclopscore_fileid)

    implementation fg.deobf("curse.maven:immersive-engineering-231951:"+project.immersiveengineering_fileid)

    compileOnly "mekanism:Mekanism:${project.mekanism_version}:api"
    runtimeOnly fg.deobf("mekanism:Mekanism:${project.mekanism_version}")// core


    implementation fg.deobf("curse.maven:consecration-284001:"+project.consecration_fileid)

    //implementation fg.deobf("curse.maven:minecolonies-245506:3126211")
    //runtimeOnly fg.deobf("curse.maven:structurize-298744:3358385")
    // Missing com.ldtteam:datagenerators:0.1.44-ALPHA
//    compileOnly fg.deobf("com.minecolonies:minecolonies:"+project.minecolonies_version+":api")
//    runtimeOnly fg.deobf("com.minecolonies:minecolonies:"+project.minecolonies_version)
//    runtimeOnly fg.deobf("com.ldtteam:structurize:"+project.structurize_version)

    //Optional
    runtimeOnly fg.deobf("de.maxanier.guideapi:Guide-API-VP:${project.guideapi_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.jei_version}") //Full for runtime

    //Old
    //deobfCompile 'com.shinoow.abyssalcraft:AbyssalCraft:'+project.minecraft_version+'-'+project.abyssalcraft_version // +':api'
    //optionalRuntime 'com.shinoow.abyssalcraft:AbyssalCraft:'+project.minecraft_version+'-'+project.abyssalcraft_version
    //deobfCompile "toroquest:toroquest:1.12.2:"+project.toroquest_version
    //deobfCompile "com.wayoftime.bloodmagic:BloodMagic:"+project.bloodmagic_version
    //deobfCompile  "org.cyclops.evilcraft:EvilCraft:"+project.evilcraft_version
    //optionalRuntime "slimeknights.mantle:Mantle:"+project.mantle_version
    //deobfCompile "slimeknights:TConstruct:"+project.tconstruct_version
    //optionalRuntime "codechicken:CodeChickenLib:"+project.codechickenlib_version+":universal"
    //deobfCompile "ancient-warfare-2:ancientwarfare:1.12.2:"+project.ancient_warfare2_version

}

processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': project.mod_version, 'mcversion': minecraft_version, 'forge_version': forge_version, 'vampirism_version': project.vampirism_version
    }


    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
    outputs.upToDateWhen { false }

    exclude '**/Thumbs.db'
}


